name: IP Scanner and HTML Generator

on:
  issues:
    types: [opened]

jobs:
  scan-and-generate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create Runs Directory
      run: mkdir -p runs

    - name: Log Issue Body
      id: log_issue
      run: |
        issue_body="${{ github.event.issue.body }}"
        issue_title="${{ github.event.issue.title }}"
        issue_url="${{ github.event.issue.html_url }}"
        timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        issue_data=$(printf '{"issue_title": "%s", "issue_url": "%s", "issue_body": "%s", "timestamp": "%s", "status": "running"}' \
          "$issue_title" "$issue_url" "$issue_body" "$timestamp")
        log_file="runs/logs.json"
        if [ ! -f "$log_file" ]; then
          echo "[]" > "$log_file"
        fi
        echo "$(jq ". + [$issue_data]" "$log_file")" > "$log_file"

    - name: Save Issue Body as Environment Variable
      id: save_body
      run: |
        echo "BODY<<EOF" >> $GITHUB_ENV
        echo "${{ github.event.issue.body }}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Run IP Scanner
      run: python ip_scanner.py "$BODY"

    - name: Generate HTML Report
      run: python generate_html.py

    - name: Commit and Push Results
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add index.html scan_results.json
        git commit -m "Update scan results and HTML report"
        git push

    - name: Update Log and Close Issue
      run: |
        log_file="runs/logs.json"
        if [ ! -f "$log_file" ]; then
          echo "[]" > "$log_file"
        fi
        echo "$(jq '.[-1].status = "completed"' "$log_file")" > "$log_file"
        echo "Closing the issue."
        curl -s -X PATCH -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"state": "closed"}' \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}"
